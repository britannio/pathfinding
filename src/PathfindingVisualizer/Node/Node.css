/* Styling for empty nodes on the grid. Creates a blank square. */
.node {
  width: 25px;
  height: 25px;
  outline: 1px solid rgb(175, 216, 248);
  display: inline-block;
}

/* Styling for the node that the algorithm is searching for. */
.node-finish {
  background-color: #f26968;
}

/* Styling for node that the algorithm starts at. */
.node-start {
  background-color: #6cbf84;
}

/* Styling for node that the algorithm starts at. 
Controlled by document.getElementById(<elememt_id>).className = node-visited
*/
.node-visited {
  animation-name: visitedAnimation;
  animation-duration: 1.5s;
  animation-timing-function: ease-out;
  animation-delay: 0;
  animation-direction: alternate;
  animation-iteration-count: 1;
  animation-fill-mode: forwards;
  animation-play-state: running;
}

/* Animation for the .node-visited property */
@keyframes visitedAnimation {
  0% {
    transform: scale(0.3);
    background-color: #4bbcf4;
    border-radius: 100%;
  }

  50% {
    background-color: #61c0bf
  }

  75% {
    /* Scale 1.2 oversizes the tile for extra effect   */
    transform: scale(1.2);
    background-color: #7bd4cc
  }

  100% {
    transform: scale(1);
    background-color: rgba(0, 190, 218, 0.75);
  }
}

/* Styling for a node acting as an impassable wall */
.node-wall {
  background-color: rgb(12, 53, 71);
}

/* Styling for the nodes forming the shortest path */
.node-shortest-path {
  animation-name: shortestPath;
  animation-duration: 1s;
  animation-timing-function: ease-out;
  animation-delay: 0;
  animation-direction: alternate;
  animation-iteration-count: 1;
  animation-fill-mode: forwards;
  animation-play-state: running;
}

/* Animation for the .node-shortest-path property */
@keyframes shortestPath {
  0% {
    transform: scale(0.6);
    background-color: #bdc16c;
  }

  50% {
    transform: scale(1.2);
    background-color: #f1f49c;
  }

  100% {
    transform: scale(1);
    background-color: yellow;
    opacity: 0.75;
    
  }
}
